version: '3.7'

services:
  server:
    image: redash/redash:latest
    depends_on:
      - postgres
      - redis
    ports:
      - "5000:5000"
      - "5678:5678"
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres/postgres"
      REDASH_RATELIMIT_ENABLED: "false"
      REDASH_ENFORCE_CSRF: "true"
    networks:
      - services
  worker:
    image: redash/redash:latest
    command: worker
    depends_on:
      - server
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres/postgres"
    networks:
      - services
  scheduler:
    image: redash/redash:latest
    command: scheduler
    depends_on:
      - server
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: "INFO"
      REDASH_REDIS_URL: "redis://redis:6379/0"
      REDASH_DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres/postgres"
    networks:
      - services
  redis:
    image: redis:latest
    restart: unless-stopped
  postgres:
    container_name: postgresql_redash
    hostname: postgresql
    image: postgres:latest
    volumes:
      - 'postgresql_redash_data:/var/lib/postgresql/data'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    networks:
      - services
    ports:
      - 5432:5432
    restart: always

volumes:
  postgresql_redash_data:
    driver: local

networks:
  services:
    name: ${REDASH_NETWORK:-redash.network}
